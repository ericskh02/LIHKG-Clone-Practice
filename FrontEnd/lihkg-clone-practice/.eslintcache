[{"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\index.js":"1","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\App.js":"2","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\reportWebVitals.js":"3","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Background.js":"4","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList.js":"5","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopBar.js":"6","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList_Topic.js":"7","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Topic.js":"8","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\TopicTopBar.js":"9","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Wall.js":"10","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\Reply.js":"11","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\ReplyTopBar.js":"12","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopic.js":"13","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopicBar.js":"14","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\API\\API.js":"15","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Content.js":"16","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\FirstFloorTopBar.js":"17","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\CreateReply.js":"18","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryList.js":"19","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\Category.js":"20","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryData.js":"21","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\Login\\LoginButton.js":"22","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserContext.js":"23","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserInfo.js":"24","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopicCategory.js":"25","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Like.js":"26"},{"size":500,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":2387,"mtime":1610117046530,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":390,"mtime":1609855979600,"results":"31","hashOfConfig":"28"},{"size":2126,"mtime":1610258024915,"results":"32","hashOfConfig":"28"},{"size":1985,"mtime":1610257921058,"results":"33","hashOfConfig":"28"},{"size":1422,"mtime":1609300769911,"results":"34","hashOfConfig":"28"},{"size":2004,"mtime":1610259748221,"results":"35","hashOfConfig":"28"},{"size":1025,"mtime":1609340874972,"results":"36","hashOfConfig":"28"},{"size":107,"mtime":1609336438461,"results":"37","hashOfConfig":"28"},{"size":1027,"mtime":1610259138237,"results":"38","hashOfConfig":"28"},{"size":631,"mtime":1610088276267,"results":"39","hashOfConfig":"28"},{"size":2360,"mtime":1610079217494,"results":"40","hashOfConfig":"28"},{"size":310,"mtime":1609057330063,"results":"41","hashOfConfig":"28"},{"size":3383,"mtime":1610265033162,"results":"42","hashOfConfig":"28"},{"size":706,"mtime":1610259048642,"results":"43","hashOfConfig":"28"},{"size":581,"mtime":1610258040837,"results":"44","hashOfConfig":"28"},{"size":1997,"mtime":1610078227643,"results":"45","hashOfConfig":"28"},{"size":1251,"mtime":1610257853134,"results":"46","hashOfConfig":"28"},{"size":214,"mtime":1609916911371,"results":"47","hashOfConfig":"28"},{"size":217,"mtime":1609916848393,"results":"48","hashOfConfig":"28"},{"size":1803,"mtime":1610025985521,"results":"49","hashOfConfig":"28"},{"size":86,"mtime":1610011781720,"results":"50","hashOfConfig":"28"},{"size":667,"mtime":1610116064707,"results":"51","hashOfConfig":"28"},{"size":335,"mtime":1610079365063,"results":"52","hashOfConfig":"28"},{"size":3543,"mtime":1610265150022,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"ir7eo7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\index.js",[],["116","117"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\App.js",["118","119","120"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState,useMemo, useEffect } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport { useParams } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container'\nimport TopicList from './Components/TopicList'\nimport Background from './Components/Background'\nimport Topic from './Components/Topics/Topic'\nimport CategoryList from './Components/Topics/CategoryList/CategoryList';\nimport CategoryData from \"./Components/Topics/CategoryList/CategoryData\";\nimport {UserContext} from './Components/Account/User/UserContext'\nimport API from './API/API'\nfunction RenderHome() {\n\treturn (\n\t\t<div>\n\t\t\t<Background />\n\t\t</div>\n\t);\n}\nfunction RenderTopic() {\n\tconst id = useParams();\n\treturn (\n\t\t<div>\n\t\t\t<Topic id={id} />\n\t\t</div>\n\t);\n}\n\nfunction RenderTopicList(props){\n\treturn(\n\t\t<div>\n\t\t\t<TopicList category=\"1\" setMenuOpen={props.setMenuOpen}/>\n\t\t</div>\n\t);\n}\n\nfunction RenderTopicListByCategory(props){\n\tconst cat = useParams();\n\treturn(\n\t\t<div>\n\t\t\t<TopicList category={cat.cat} setMenuOpen={props.setMenuOpen}/>\n\t\t</div>\n\t);\n}\nfunction App() {\n\n\tconst [userData,setUserData] = useState({'loggedIn':false})\n\t\n\tconst [isMenuOpen, setIsMenuOpen] = useState(false);\n\n\tfunction setMenuOpen() {\n\t\tsetIsMenuOpen(!isMenuOpen);\n\t}\n\n\tconst categories = CategoryData();\n\t\n\treturn (\n\n\t\t<div>\n\t\t\t<UserContext.Provider value={{userData,setUserData}}>\n\t\t\t<API />\n\t\t\t<Router>\n\t\t\t\t<Container>\n\t\t\t\t\t<div className=\"row no-gutters\">\n\n\t\t\t\t\t\t<div className=\"col-4\">\n\n\t\t\t\t\t\t\t<CategoryList show={isMenuOpen} />\n\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/category/:cat\">\n\t\t\t\t\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t\t\t\t\t<title>LIHKG Clone</title>\n\t\t\t\t\t\t\t\t\t</Helmet>\n\t\t\t\t\t\t\t\t\t<RenderTopicListByCategory setMenuOpen={setMenuOpen}/>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t\t\t\t\t<title>LIHKG Clone</title>\n\t\t\t\t\t\t\t\t\t</Helmet>\n\t\t\t\t\t\t\t\t\t<RenderTopicList setMenuOpen={setMenuOpen}/>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/topic/:id\">\n\t\t\t\t\t\t\t\t\t<RenderTopic />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t\t<RenderHome />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\n\t\t\t</Router>\n\t\t\t</UserContext.Provider>\n\t\t</div>\n\n\t);\n}\n\nexport default App;\n","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\reportWebVitals.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Background.js",["121"],"import React, { useState } from 'react';\r\n\r\nimport favicon from '../Image/favicon.png'\r\n\r\nfunction Background(){\r\n    return (\r\n        <div className=\"min-vh-100 pt-5 bg-light\">\r\n            <img className=\"mr-3\" src={favicon} alt=\"logo\"></img>\r\n            <span>LIHKG 討論區</span>\r\n            <p className=\"pl-5\">練習用</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList.js",["122","123","124"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopBar.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList_Topic.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Topic.js",["125","126"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\TopicTopBar.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Wall.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\Reply.js",["127","128","129","130","131"],"import { createContext, useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ReplyTopBar from './ReplyTopBar'\r\nimport Wall from '../Wall'\r\nimport Like from '../Like'\r\n\r\n/*\r\nconst data = {\r\n    \"author\": \"writer\",\r\n    \"replytime\": \"2020/12/27\",\r\n    \"floor\": 1,\r\n    \"like\": 10,\r\n    \"dislike\": 2,\r\n    \"content\": \"Hello world!\",\r\n};\r\n*/\r\n\r\nfunction Reply(props) {\r\n    const data = props.data;\r\n    const likedata = props.likedata;\r\n    return (\r\n        <div className=\"m-5\">\r\n                <div className=\"row\">\r\n                    <ReplyTopBar data={data} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <h1>{data.content}</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Like data={data} likedata={likedata}/>\r\n                </div>\r\n                <Wall />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reply","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\ReplyTopBar.js",["132","133"],"import { useContext } from \"react\";\r\n\r\nfunction ReplyTopBar(props) {\r\n    const data = props.data;\r\n    if(data.floor == undefined)data.floor = 0;\r\n    return (\r\n        <div>\r\n            <span className=\"text-secondary m-1\">\r\n                #{data.floor+2}\r\n            </span>\r\n            <span className=\"text-primary m-1\">\r\n                {data.author} \r\n            </span>\r\n            <span className=\"text-secondary m-1\">\r\n                {data.replyTime}\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReplyTopBar","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopic.js",["134","135","136"],"import {APICreateTopic} from '../../../API/API'\r\nimport { useState,useEffect,useContext } from 'react';\r\n\r\nimport CreateTopicBar from './CreateTopicBar'\r\nimport {UserContext} from '../../Account/User/UserContext'\r\nimport CreateTopicCategory from './CreateTopicCategory'\r\n\r\nfunction CreateTopic(props) {\r\n\r\n    const [showCreateTopic,setShowCreateTopic] = useState(false);\r\n\r\n    const {userData,setUserData} = useContext(UserContext);\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(userData.loggedIn){\r\n            \r\n            const data = new FormData(event.target);\r\n            var object = {};\r\n            data.forEach((value, key) => object[key] = value);\r\n            object['author'] = userData.name;\r\n            console.log(object);\r\n            APICreateTopic(object);\r\n\r\n        } else {\r\n            alert(\"未登入!\")\r\n        }\r\n        setShowCreateTopic(false);\r\n    }\r\n\r\n    useEffect(\r\n        ()=>{\r\n            setShowCreateTopic(props.show);\r\n        },[]\r\n    );\r\n\r\n    let html = <div></div>;\r\n    if(showCreateTopic){\r\n        html =         \r\n        <div className=\"createtopic overflow-hidden\">\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"formgroup text-center mt-5\">\r\n                <span className=\"h4\">發表主題</span>\r\n                <button type=\"button\" className=\"float-right mr-3\">X</button>\r\n            </div>\r\n            <div className=\"formgroup row ml-5 pl-5 mt-5\">\r\n                <select name=\"category\" id=\"category\">\r\n                    {CreateTopicCategory()}\r\n                </select>\r\n                <input type=\"text\" class=\"form-control col-9 ml-2\" id=\"title\" name=\"title\" aria-describedby=\"Title\" aria-label=\"標題\" placeholder=\"標題\"></input>\r\n            </div>\r\n            <div className=\"formgroup text-center mt-5\">\r\n                <textarea id=\"content\" name=\"content\" rows=\"20\" cols=\"100\" className=\"bg-light\">\r\n                    \r\n                </textarea>\r\n            </div>\r\n            <div className=\"formgroupmt-5\">\r\n                <input type=\"submit\" value=\"提交\" className=\"float-right mr-5\"></input>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    } else {\r\n        html = <div></div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {html}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateTopic","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopicBar.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\API\\API.js",["137","138","139","140"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Content.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\FirstFloorTopBar.js",["141"],"import { useContext } from \"react\";\r\n\r\nfunction FirstFloorTopBar(props) {\r\n    const data = props.data;\r\n    return (\r\n        <div>\r\n            <span className=\"text-secondary m-1\">\r\n                #1\r\n            </span>\r\n            <span className=\"text-primary m-1\">\r\n                {data.author} \r\n            </span>\r\n            <span className=\"text-secondary m-1\">\r\n                {data.createTime}\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FirstFloorTopBar","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\CreateReply.js",["142","143"],"import { useState, useEffect, useContext } from 'react'\r\n\r\nimport { APICreateReply } from '../../../API/API'\r\nimport {UserContext} from '../../Account/User/UserContext'\r\n\r\nfunction CreateReply(props) {\r\n\r\n    const {userData,setUserData} = useContext(UserContext);\r\n    const [showCreateReply, setShowCreateReply] = useState(false);\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if(userData.loggedIn){\r\n            const data = new FormData(event.target);\r\n            var object = {};\r\n            data.forEach((value, key) => object[key] = value);\r\n            object['author'] = userData.name;\r\n            object['topicId'] = props.topicId;\r\n            APICreateReply(object);\r\n            console.log(object)\r\n            \r\n        } else {\r\n            alert(\"未登入!\")\r\n        }\r\n        setShowCreateReply(false);\r\n    }\r\n\r\n    var html = <div></div>\r\n\r\n    useEffect(\r\n        () => {\r\n            setShowCreateReply(props.show);\r\n        }, []\r\n    );\r\n\r\n    if (showCreateReply) {\r\n        html =\r\n            <div className=\"createtopic\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"formgroup text-center mt-5\">\r\n                        <span className=\"h4\">回覆</span>\r\n                        <button type=\"button\" className=\"float-right mr-3\">X</button>\r\n                    </div>\r\n                    <div className=\"formgroup text-center mt-5\">\r\n                        <textarea id=\"content\" name=\"content\" rows=\"20\" cols=\"100\" className=\"bg-light\">\r\n\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"formgroupmt-5\">\r\n                        <input type=\"submit\" value=\"提交\" className=\"float-right mr-5\"></input>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    } else {\r\n        html = <div></div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        { html }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateReply","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryList.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\Category.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryData.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\Login\\LoginButton.js",["144"],"import { useState, useContext } from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { UserContext } from '../User/UserContext'\r\n\r\nimport UserInfo from '../User/UserInfo'\r\n\r\nfunction LoginButton() {\r\n\r\n    const { userData, setUserData } = useContext(UserContext);\r\n\r\n    const responseGoogle = (response) => {\r\n        let tempUserData = response.profileObj;\r\n        setUserData({\r\n            'loggedIn': true,\r\n            'name': tempUserData.name,\r\n            'email': tempUserData.email,\r\n            'imgURL': tempUserData.imageUrl\r\n        });\r\n    }\r\n\r\n    const logout = () => {\r\n        setUserData({\r\n            'loggedIn': false,\r\n            'name': \"\",\r\n            'email': \"\",\r\n            'imgURL': \"\"\r\n        });\r\n    }\r\n    if (!userData.loggedIn) {\r\n        return (\r\n            <div className=\"row text-center\">\r\n                <GoogleLogin\r\n                    clientId=\"255388121595-ugkmupo0flk3r898cnut14bjs0ra5srb.apps.googleusercontent.com\"\r\n                    isSignedIn={true}\r\n                    buttonText=\"Login\"\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    \r\n                />\r\n\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <UserInfo />\r\n\r\n                <GoogleLogout\r\n                    clientId=\"255388121595-ugkmupo0flk3r898cnut14bjs0ra5srb.apps.googleusercontent.com\"\r\n                    buttonText=\"Logout\"\r\n                    onLogoutSuccess={logout}\r\n                >\r\n                </GoogleLogout>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LoginButton","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserContext.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserInfo.js",["145","146"],"import {useContext} from 'react'\r\n\r\nimport {UserContext} from './UserContext'\r\n\r\nfunction UserInfo(){\r\n\r\n    const {userData,setUserData} = useContext(UserContext);\r\n\r\n    if(!userData.loggedIn){\r\n        return (<div>\r\n            <p>Login to see</p>\r\n        </div>);\r\n    } else \r\n    return (\r\n        \r\n        <div className=\"row text-center\">\r\n            <div className=\"col-12\">\r\n                <img className=\"rounded-circle\" src={userData.imgURL}></img>\r\n            </div>\r\n            <div className=\"col-12\">\r\n                <p className=\"col-md-6 mx-auto\">{userData.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopicCategory.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Like.js",["147","148","149","150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":3,"column":19,"nodeType":"158","messageId":"159","endLine":3,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":3,"column":28,"nodeType":"158","messageId":"159","endLine":3,"endColumn":37},{"ruleId":"156","severity":1,"message":"161","line":57,"column":8,"nodeType":"158","messageId":"159","endLine":57,"endColumn":18},{"ruleId":"156","severity":1,"message":"162","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":35,"column":28,"nodeType":"165","endLine":35,"endColumn":77},{"ruleId":"166","severity":1,"message":"167","line":40,"column":15,"nodeType":"168","endLine":42,"endColumn":6},{"ruleId":"166","severity":1,"message":"169","line":42,"column":8,"nodeType":"170","endLine":42,"endColumn":10,"suggestions":"171"},{"ruleId":"166","severity":1,"message":"167","line":38,"column":15,"nodeType":"168","endLine":49,"endColumn":6},{"ruleId":"166","severity":1,"message":"172","line":49,"column":7,"nodeType":"170","endLine":49,"endColumn":9,"suggestions":"173"},{"ruleId":"156","severity":1,"message":"174","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":23},{"ruleId":"156","severity":1,"message":"175","line":1,"column":25,"nodeType":"158","messageId":"159","endLine":1,"endColumn":35},{"ruleId":"156","severity":1,"message":"176","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"156","severity":1,"message":"177","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":20},{"ruleId":"156","severity":1,"message":"178","line":3,"column":22,"nodeType":"158","messageId":"159","endLine":3,"endColumn":34},{"ruleId":"156","severity":1,"message":"175","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":5,"column":19,"nodeType":"181","messageId":"182","endLine":5,"endColumn":21},{"ruleId":"156","severity":1,"message":"183","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":22},{"ruleId":"156","severity":1,"message":"184","line":12,"column":21,"nodeType":"158","messageId":"159","endLine":12,"endColumn":32},{"ruleId":"166","severity":1,"message":"185","line":34,"column":11,"nodeType":"170","endLine":34,"endColumn":13,"suggestions":"186"},{"ruleId":"156","severity":1,"message":"187","line":55,"column":11,"nodeType":"158","messageId":"159","endLine":55,"endColumn":14},{"ruleId":"156","severity":1,"message":"187","line":72,"column":11,"nodeType":"158","messageId":"159","endLine":72,"endColumn":14},{"ruleId":"156","severity":1,"message":"187","line":89,"column":11,"nodeType":"158","messageId":"159","endLine":89,"endColumn":14},{"ruleId":"156","severity":1,"message":"187","line":106,"column":11,"nodeType":"158","messageId":"159","endLine":106,"endColumn":14},{"ruleId":"156","severity":1,"message":"175","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":20},{"ruleId":"156","severity":1,"message":"184","line":8,"column":21,"nodeType":"158","messageId":"159","endLine":8,"endColumn":32},{"ruleId":"166","severity":1,"message":"188","line":33,"column":12,"nodeType":"170","endLine":33,"endColumn":14,"suggestions":"189"},{"ruleId":"156","severity":1,"message":"162","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":18},{"ruleId":"156","severity":1,"message":"184","line":7,"column":21,"nodeType":"158","messageId":"159","endLine":7,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":18,"column":17,"nodeType":"165","endLine":18,"endColumn":71},{"ruleId":"156","severity":1,"message":"184","line":10,"column":21,"nodeType":"158","messageId":"159","endLine":10,"endColumn":32},{"ruleId":"166","severity":1,"message":"167","line":30,"column":15,"nodeType":"168","endLine":38,"endColumn":6},{"ruleId":"166","severity":1,"message":"192","line":38,"column":7,"nodeType":"170","endLine":38,"endColumn":9,"suggestions":"193"},{"ruleId":"166","severity":1,"message":"194","line":43,"column":26,"nodeType":"195","endLine":43,"endColumn":134},{"ruleId":"166","severity":1,"message":"196","line":49,"column":29,"nodeType":"195","endLine":49,"endColumn":139},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'categories' is assigned a value but never used.","'useState' is defined but never used.","react/jsx-pascal-case","Imported JSX component TopicList_Topic must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'genTopics'. Either include it or remove the dependency array.","ArrayExpression",["199"],"React Hook useEffect has missing dependencies: 'getReplyData', 'getReplyLikeData', and 'getTopicData'. Either include them or remove the dependency array.",["200"],"'createContext' is defined but never used.","'useContext' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faThumbsUp' is defined but never used.","'faThumbsDown' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CreateTopicBar' is defined but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.show'. Either include it or remove the dependency array. If 'setShowCreateTopic' needs the current value of 'props.show', you can also switch to useReducer instead of useState and read 'props.show' in the reducer.",["201"],"'req' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.show'. Either include it or remove the dependency array. If 'setShowCreateReply' needs the current value of 'props.show', you can also switch to useReducer instead of useState and read 'props.show' in the reducer.",["202"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'data.category' and 'data.id'. Either include them or remove the dependency array.",["203"],"Assignments to the 'likebutton' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","JSXElement","Assignments to the 'dislikebutton' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [genTopics]",{"range":"213","text":"214"},"Update the dependencies array to be: [getReplyData, getReplyLikeData, getTopicData]",{"range":"215","text":"216"},"Update the dependencies array to be: [props.show]",{"range":"217","text":"218"},{"range":"219","text":"218"},"Update the dependencies array to be: [data.category, data.id]",{"range":"220","text":"221"},[1025,1027],"[genTopics]",[1398,1400],"[getReplyData, getReplyLikeData, getTopicData]",[1008,1010],"[props.show]",[984,986],[1496,1498],"[data.category, data.id]"]