[{"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\index.js":"1","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\App.js":"2","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\reportWebVitals.js":"3","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Background.js":"4","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList.js":"5","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopBar.js":"6","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList_Topic.js":"7","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Topic.js":"8","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\TopicTopBar.js":"9","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Wall.js":"10","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\Reply.js":"11","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\ReplyTopBar.js":"12","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopic.js":"13","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopicBar.js":"14","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\API\\API.js":"15","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Content.js":"16","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\FirstFloorTopBar.js":"17","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\CreateReply.js":"18","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryList.js":"19","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\Category.js":"20","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryData.js":"21","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\Login\\LoginButton.js":"22","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserContext.js":"23","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserInfo.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":2411,"mtime":1610013051174,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":390,"mtime":1609855979600,"results":"29","hashOfConfig":"26"},{"size":2111,"mtime":1609924686064,"results":"30","hashOfConfig":"26"},{"size":1977,"mtime":1610007911742,"results":"31","hashOfConfig":"26"},{"size":1422,"mtime":1609300769911,"results":"32","hashOfConfig":"26"},{"size":1686,"mtime":1609993336859,"results":"33","hashOfConfig":"26"},{"size":1025,"mtime":1609340874972,"results":"34","hashOfConfig":"26"},{"size":107,"mtime":1609336438461,"results":"35","hashOfConfig":"26"},{"size":1311,"mtime":1609293171773,"results":"36","hashOfConfig":"26"},{"size":654,"mtime":1609294020571,"results":"37","hashOfConfig":"26"},{"size":2374,"mtime":1610026819909,"results":"38","hashOfConfig":"26"},{"size":310,"mtime":1609057330063,"results":"39","hashOfConfig":"26"},{"size":747,"mtime":1609905801950,"results":"40","hashOfConfig":"26"},{"size":1191,"mtime":1609294004266,"results":"41","hashOfConfig":"26"},{"size":603,"mtime":1609293950943,"results":"42","hashOfConfig":"26"},{"size":1997,"mtime":1610027188445,"results":"43","hashOfConfig":"26"},{"size":889,"mtime":1610011971908,"results":"44","hashOfConfig":"26"},{"size":214,"mtime":1609916911371,"results":"45","hashOfConfig":"26"},{"size":217,"mtime":1609916848393,"results":"46","hashOfConfig":"26"},{"size":1803,"mtime":1610025985521,"results":"47","hashOfConfig":"26"},{"size":86,"mtime":1610011781720,"results":"48","hashOfConfig":"26"},{"size":657,"mtime":1610024841690,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ir7eo7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\index.js",[],["107","108"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\App.js",["109"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState,useMemo } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport { useParams } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container'\nimport TopicList from './Components/TopicList'\nimport Background from './Components/Background'\nimport Topic from './Components/Topics/Topic'\nimport CategoryList from './Components/Topics/CategoryList/CategoryList';\nimport CategoryData from \"./Components/Topics/CategoryList/CategoryData\";\nimport {UserContext} from './Components/Account/User/UserContext'\nfunction RenderHome() {\n\treturn (\n\t\t<div>\n\t\t\t<Background />\n\t\t</div>\n\t);\n}\nfunction RenderTopic() {\n\tconst id = useParams();\n\treturn (\n\t\t<div>\n\t\t\t<Topic id={id} />\n\t\t</div>\n\t);\n}\n\nfunction RenderTopicList(props){\n\treturn(\n\t\t<div>\n\t\t\t<TopicList category=\"1\" setMenuOpen={props.setMenuOpen}/>\n\t\t</div>\n\t);\n}\n\nfunction RenderTopicListByCategory(props){\n\tconst cat = useParams();\n\treturn(\n\t\t<div>\n\t\t\t<TopicList category={cat.cat} setMenuOpen={props.setMenuOpen}/>\n\t\t</div>\n\t);\n}\nfunction App() {\n\n\tconst [userData,setUserData] = useState({'loggedIn':false});\n\tconst providerValue = useMemo(()=>({userData,setUserData}),[userData,setUserData])\n\tconst [isMenuOpen, setIsMenuOpen] = useState(false);\n\n\tfunction setMenuOpen() {\n\t\tsetIsMenuOpen(!isMenuOpen);\n\t}\n\n\tconst categories = CategoryData();\n\t\n\treturn (\n\n\t\t<div>\n\t\t\t<UserContext.Provider value={providerValue}>\n\t\t\t<Router>\n\t\t\t\t<Container>\n\t\t\t\t\t<div className=\"row no-gutters\">\n\n\t\t\t\t\t\t<div className=\"col-4\">\n\n\t\t\t\t\t\t\t<CategoryList show={isMenuOpen} />\n\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/category/:cat\">\n\t\t\t\t\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t\t\t\t\t<title>LIHKG Clone</title>\n\t\t\t\t\t\t\t\t\t</Helmet>\n\t\t\t\t\t\t\t\t\t<RenderTopicListByCategory setMenuOpen={setMenuOpen}/>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t\t\t\t\t<title>LIHKG Clone</title>\n\t\t\t\t\t\t\t\t\t</Helmet>\n\t\t\t\t\t\t\t\t\t<RenderTopicList setMenuOpen={setMenuOpen}/>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/topic/:id\">\n\t\t\t\t\t\t\t\t\t<RenderTopic />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t\t<RenderHome />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\n\t\t\t</Router>\n\t\t\t</UserContext.Provider>\n\t\t</div>\n\n\t);\n}\n\nexport default App;\n","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\reportWebVitals.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Background.js",["110"],"import React, { useState } from 'react';\r\n\r\nimport favicon from '../Image/favicon.png'\r\n\r\nfunction Background(){\r\n    return (\r\n        <div className=\"min-vh-100 pt-5 bg-light\">\r\n            <img className=\"mr-3\" src={favicon} alt=\"logo\"></img>\r\n            <span>LIHKG 討論區</span>\r\n            <p className=\"pl-5\">練習用</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList.js",["111","112","113"],"import { useState,useEffect } from 'react'\r\n\r\nimport TopBar from './TopBar'\r\nimport TopicList_Topic from './TopicList_Topic'\r\n\r\nimport { APITopicList } from '../API/API'\r\n\r\nfunction TopicList(props) {\r\n\r\n   const [response,setResponse] = useState([]);\r\n\r\n   var category;\r\n\r\n   if(typeof props.category === \"undefined\"){\r\n       category = \"\";\r\n   } else {\r\n       category = props.category;\r\n   }\r\n\r\n    async function getTopicsFromAPI(){\r\n        var response = await APITopicList(category)\r\n        .then(res=>\r\n            {return res;}\r\n        )\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n        return response;\r\n    }\r\n\r\n    async function genTopics() {\r\n        let generated = [];\r\n        const topics = await getTopicsFromAPI();\r\n        topics.data.topicList.forEach(topic => {\r\n            generated.push(<TopicList_Topic topics={topic} />);\r\n        });\r\n        return generated;\r\n    }\r\n\r\n    useEffect(async() => {\r\n        setResponse(await genTopics());\r\n    }, []); //This will run only once \r\n\r\n    return (\r\n        <div className=\"min-vh-100\">\r\n            <TopBar category={props.category} setMenuOpen={props.setMenuOpen}/>\r\n            <div className=\"mt-5\">\r\n                {response}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n        /*\r\n       const topics = [\r\n            {\r\n                \"author\": \"作者\",\r\n                \"createTime\": \"10分鐘前\",\r\n                \"like\": 10,\r\n                \"dislike\": 0,\r\n                \"title\": \"第1個post\"\r\n            },\r\n            {\r\n                \"author\": \"連泥住\",\r\n                \"posttime\": \"5分鐘前\",\r\n                \"like\": -10,\r\n                \"dislike\": 0,\r\n                \"title\": \"第2個post\"\r\n            }\r\n        ];\r\n        function genTopics() {\r\n            let generated = [];\r\n            topics.forEach(topic => {\r\n                console.log(topic);\r\n                generated.push(<TopicList_Topic topics={topic} />);\r\n            });\r\n            console.log(generated);\r\n            return generated;\r\n        }\r\n    */\r\n}\r\n\r\nexport default TopicList;\r\n","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopBar.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\TopicList_Topic.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Topic.js",["114","115"],"import { useEffect,useState } from 'react';\r\n\r\nimport {APIGetTopic,APIGetReply} from '../../API/API'\r\n\r\n\r\nimport TopicTopBar from './TopicTopBar'\r\nimport Reply from './Reply/Reply'\r\nimport Content from './Content'\r\n\r\nfunction Topic(props) {\r\n\r\n    const id = props.id.id;\r\n\r\n    const [TopicData,setTopicData] = useState(<div></div>);\r\n    const [ReplyData,setReplyData] = useState(<div></div>);\r\n\r\n    function genReplyData(data){\r\n        let generated = [];\r\n        data = data.replyList;\r\n        data.forEach(element => {\r\n            console.log(element)\r\n            generated.push(\r\n                <Reply data={element}/>\r\n            )\r\n        });\r\n        return generated;\r\n    }\r\n\r\n    async function getTopicData(){\r\n        var Response = await APIGetTopic(id)\r\n        .then(\r\n            res=> {return res}\r\n        ).catch(err=>\r\n            console.log(err)\r\n        );\r\n        return Response.data;\r\n    }\r\n\r\n    useEffect(async()=>{\r\n        const TempData = await getTopicData();\r\n        setTopicData((\r\n            <div>\r\n                <TopicTopBar topic={TempData}/>\r\n                <Content content={TempData}/>\r\n            </div>\r\n        ));\r\n        const ReplyData = await getReplyData();\r\n        console.log(ReplyData);\r\n        setReplyData(genReplyData(ReplyData));\r\n    },[])\r\n\r\n    async function getReplyData(){\r\n        const Response = await APIGetReply(id)\r\n        .then(\r\n            res=> {return res}\r\n        ).catch(err=>\r\n            console.log(err)\r\n        );\r\n        return Response.data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {TopicData}\r\n            {ReplyData}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Topic","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\TopicTopBar.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Wall.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\Reply.js",["116","117"],"import { createContext, useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ReplyTopBar from './ReplyTopBar'\r\nimport Wall from '../Wall'\r\n\r\n/*\r\nconst data = {\r\n    \"author\": \"writer\",\r\n    \"replytime\": \"2020/12/27\",\r\n    \"floor\": 1,\r\n    \"like\": 10,\r\n    \"dislike\": 2,\r\n    \"content\": \"Hello world!\",\r\n};\r\n*/\r\n\r\nfunction Reply(data) {\r\n    data = data.data;\r\n    return (\r\n        <div className=\"m-5\">\r\n                <div className=\"row\">\r\n                    <ReplyTopBar data={data} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <p><h1>{data.content}</h1></p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"text-secondary bg-light\">\r\n                        <span className=\"m-1\"><FontAwesomeIcon icon={faThumbsUp} /></span>\r\n                        <span className=\"m-1\">{data.like}</span>\r\n                        <span className=\"m-1\"><FontAwesomeIcon icon={faThumbsDown} /></span>\r\n                        <span className=\"m-1\">{data.dislike}</span>\r\n                    </div>\r\n                </div>\r\n                <Wall />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reply","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\ReplyTopBar.js",["118","119"],"import { useContext } from \"react\";\r\n\r\nfunction ReplyTopBar(props) {\r\n    const data = props.data;\r\n    console.log(data)\r\n    if(data.floor == undefined)data.floor = 0;\r\n    return (\r\n        <div>\r\n            <span className=\"text-secondary m-1\">\r\n                #{data.floor+2}\r\n            </span>\r\n            <span className=\"text-primary m-1\">\r\n                {data.author} \r\n            </span>\r\n            <span className=\"text-secondary m-1\">\r\n                {data.replytime}\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReplyTopBar","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopic.js",["120","121","122"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Edit\\CreateTopicBar.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\API\\API.js",["123"],"import axios from 'axios';\r\n\r\nconst Request = axios.create({\r\n    baseURL: \"http://localhost:8080/api\"\r\n});\r\n\r\nexport const APITopicList = data => (data==\"\")?Request.get('/topics'):Request.get('/topics/'+data);\r\n\r\nexport const APIGetTopic = data => Request.get('/topic/'+data); \r\n\r\nexport const APIGetReply = data => Request.get('/reply/'+data);\r\n\r\nexport const APICreateTopic = data => Request.post('/topic/create',data,{\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport const APICreateReply = data => Request.post('/reply/create',data,{\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\n//Template with data input\r\n// export const APILogin = data => TopicListRequest.get('/login',data);","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Content.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\FirstFloorTopBar.js",["124"],"import { useContext } from \"react\";\r\n\r\nfunction FirstFloorTopBar(props) {\r\n    const data = props.data;\r\n    console.log(data)\r\n    return (\r\n        <div>\r\n            <span className=\"text-secondary m-1\">\r\n                #1\r\n            </span>\r\n            <span className=\"text-primary m-1\">\r\n                {data.author} \r\n            </span>\r\n            <span className=\"text-secondary m-1\">\r\n                {data.replytime}\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n            <span>\r\n\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FirstFloorTopBar","C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\Reply\\CreateReply.js",["125","126"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryList.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\Category.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Topics\\CategoryList\\CategoryData.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\Login\\LoginButton.js",["127"],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserContext.js",[],"C:\\Users\\Alex\\Documents\\GitHub\\LIHKG-Clone-Practice\\FrontEnd\\lihkg-clone-practice\\src\\Components\\Account\\User\\UserInfo.js",["128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":56,"column":8,"nodeType":"136","messageId":"137","endLine":56,"endColumn":18},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":35,"column":28,"nodeType":"141","endLine":35,"endColumn":62},{"ruleId":"142","severity":1,"message":"143","line":40,"column":15,"nodeType":"144","endLine":42,"endColumn":6},{"ruleId":"142","severity":1,"message":"145","line":42,"column":8,"nodeType":"146","endLine":42,"endColumn":10,"suggestions":"147"},{"ruleId":"142","severity":1,"message":"143","line":39,"column":15,"nodeType":"144","endLine":50,"endColumn":6},{"ruleId":"142","severity":1,"message":"148","line":50,"column":7,"nodeType":"146","endLine":50,"endColumn":9,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"150","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":23},{"ruleId":"134","severity":1,"message":"151","line":1,"column":25,"nodeType":"136","messageId":"137","endLine":1,"endColumn":35},{"ruleId":"134","severity":1,"message":"151","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":6,"column":19,"nodeType":"154","messageId":"155","endLine":6,"endColumn":21},{"ruleId":"134","severity":1,"message":"156","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":22},{"ruleId":"134","severity":1,"message":"157","line":11,"column":21,"nodeType":"136","messageId":"137","endLine":11,"endColumn":32},{"ruleId":"142","severity":1,"message":"158","line":33,"column":11,"nodeType":"146","endLine":33,"endColumn":13,"suggestions":"159"},{"ruleId":"152","severity":1,"message":"153","line":7,"column":42,"nodeType":"154","messageId":"155","endLine":7,"endColumn":44},{"ruleId":"134","severity":1,"message":"151","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":20},{"ruleId":"134","severity":1,"message":"157","line":8,"column":21,"nodeType":"136","messageId":"137","endLine":8,"endColumn":32},{"ruleId":"142","severity":1,"message":"160","line":33,"column":12,"nodeType":"146","endLine":33,"endColumn":14,"suggestions":"161"},{"ruleId":"134","severity":1,"message":"138","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":18},{"ruleId":"134","severity":1,"message":"157","line":7,"column":21,"nodeType":"136","messageId":"137","endLine":7,"endColumn":32},{"ruleId":"162","severity":1,"message":"163","line":17,"column":17,"nodeType":"141","endLine":17,"endColumn":71},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'categories' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","react/jsx-pascal-case","Imported JSX component TopicList_Topic must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'genTopics'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has missing dependencies: 'getReplyData' and 'getTopicData'. Either include them or remove the dependency array.",["167"],"'createContext' is defined but never used.","'useContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CreateTopicBar' is defined but never used.","'setUserData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.show'. Either include it or remove the dependency array. If 'setShowCreateTopic' needs the current value of 'props.show', you can also switch to useReducer instead of useState and read 'props.show' in the reducer.",["168"],"React Hook useEffect has a missing dependency: 'props.show'. Either include it or remove the dependency array. If 'setShowCreateReply' needs the current value of 'props.show', you can also switch to useReducer instead of useState and read 'props.show' in the reducer.",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},"Update the dependencies array to be: [genTopics]",{"range":"177","text":"178"},"Update the dependencies array to be: [getReplyData, getTopicData]",{"range":"179","text":"180"},"Update the dependencies array to be: [props.show]",{"range":"181","text":"182"},{"range":"183","text":"182"},[1010,1012],"[genTopics]",[1314,1316],"[getReplyData, getTopicData]",[951,953],"[props.show]",[984,986]]